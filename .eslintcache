[{"/Users/spencerkim/Desktop/prosemirror-test/src/App.tsx":"1","/Users/spencerkim/Desktop/prosemirror-test/src/reportWebVitals.ts":"2","/Users/spencerkim/Desktop/prosemirror-test/src/index.tsx":"3","/Users/spencerkim/Desktop/prosemirror-test/src/utils.ts":"4","/Users/spencerkim/Desktop/prosemirror-test/src/Editor.tsx":"5","/Users/spencerkim/Desktop/prosemirror-test/src/editorUtils.ts":"6","/Users/spencerkim/Desktop/prosemirror-test/src/schema.ts":"7","/Users/spencerkim/Desktop/prosemirror-test/src/toggleMarkDebug.js":"8"},{"size":432,"mtime":1607454300897,"results":"9","hashOfConfig":"10"},{"size":513,"mtime":1607059515889,"results":"11","hashOfConfig":"10"},{"size":594,"mtime":1607375405386,"results":"12","hashOfConfig":"10"},{"size":1000,"mtime":1607446647499,"results":"13","hashOfConfig":"10"},{"size":821,"mtime":1607454412735,"results":"14","hashOfConfig":"10"},{"size":1261,"mtime":1607556736567,"results":"15","hashOfConfig":"10"},{"size":1452,"mtime":1607546785354,"results":"16","hashOfConfig":"10"},{"size":2179,"mtime":1607556751966,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"r47brn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/spencerkim/Desktop/prosemirror-test/src/App.tsx",[],[],"/Users/spencerkim/Desktop/prosemirror-test/src/reportWebVitals.ts",["38"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","/Users/spencerkim/Desktop/prosemirror-test/src/index.tsx",[],"/Users/spencerkim/Desktop/prosemirror-test/src/utils.ts",["39"],"/Users/spencerkim/Desktop/prosemirror-test/src/Editor.tsx",["40"],"import React, { RefObject, useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport { EditorView } from 'prosemirror-view';\nimport { createEditor } from './editorUtils';\n\ninterface EditorProps {\n    editorView: React.MutableRefObject<EditorView | undefined>;\n}\n\nconst EditorDiv = styled.div`\n    border: 1px solid grey;\n`;\n\nconst Editor: React.FC<EditorProps> = ({ editorView }) => {\n    const editorDiv = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (editorDiv.current == null) {\n            return;\n        }\n        const editor = createEditor({\n            div: editorDiv.current\n        });\n\n        editorView.current = editor.view;\n\n        return () => editor.destroy();\n    }, [editorDiv]);\n\n    return <EditorDiv ref={editorDiv}></EditorDiv>;\n};\n\nexport default Editor;\n","/Users/spencerkim/Desktop/prosemirror-test/src/editorUtils.ts",[],"/Users/spencerkim/Desktop/prosemirror-test/src/schema.ts",["41"],"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Mark, MarkSpec, NodeSpec, Schema } from 'prosemirror-model';\n\nconst linebreak: NodeSpec = {\n    inline: true,\n    group: 'inline',\n    selectable: false,\n    parseDOM: [{ tag: 'br' }],\n    toDOM() {\n        // see the node view for the actual DOM\n        return ['br'];\n    }\n};\n\nconst paragraph: NodeSpec = {\n    content: 'inline*',\n    group: 'block',\n    parseDOM: [{ tag: 'p' }],\n    toDOM() {\n        return ['p', 0];\n    }\n};\n\nconst nodes = {\n    text: {\n        group: 'inline'\n    },\n    doc: {\n        content: 'block+'\n    },\n    linebreak,\n    paragraph\n};\n\nconst em: MarkSpec = {\n    parseDOM: [{ tag: 'i' }, { tag: 'em' }, { style: 'font-style=italic' }],\n    toDOM() {\n        return ['em', 0];\n    }\n};\n\nconst strong: MarkSpec = {\n    parseDOM: [\n        { tag: 'strong' },\n        // This works around a Google Docs misbehavior where\n        // pasted content will be inexplicably wrapped in `<b>`\n        // tags with a font-weight normal.\n        {\n            tag: 'b',\n            getAttrs: (node: any) => node.style.fontWeight != 'normal' && null\n        },\n        {\n            style: 'font-weight',\n            getAttrs: (value: any) =>\n                /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null\n        }\n    ],\n    toDOM() {\n        return ['strong', 0];\n    }\n};\n\nconst marks = {\n    strong,\n    em\n};\n\nexport const schema = new Schema({ nodes, marks });\n","/Users/spencerkim/Desktop/prosemirror-test/src/toggleMarkDebug.js",["42","43","44","45","46","47"],{"ruleId":"48","severity":1,"message":"49","line":3,"column":25,"nodeType":"50","messageId":"51","endLine":3,"endColumn":57},{"ruleId":"52","severity":1,"message":"53","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"48","severity":1,"message":"57","line":22,"column":33,"nodeType":"54","messageId":"58","endLine":22,"endColumn":41},{"ruleId":"48","severity":1,"message":"59","line":22,"column":43,"nodeType":"54","messageId":"58","endLine":22,"endColumn":48},{"ruleId":"48","severity":1,"message":"49","line":23,"column":12,"nodeType":"60","messageId":"51","endLine":23,"endColumn":38},{"ruleId":"48","severity":1,"message":"61","line":23,"column":22,"nodeType":"54","messageId":"58","endLine":23,"endColumn":27},{"ruleId":"48","severity":1,"message":"62","line":23,"column":29,"nodeType":"54","messageId":"58","endLine":23,"endColumn":37},{"ruleId":"63","severity":1,"message":"64","line":44,"column":17,"nodeType":"65","messageId":"66","endLine":44,"endColumn":28},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'RefObject' is defined but never used.","Identifier","unusedVar","'Mark' is defined but never used.","Argument 'markType' should be typed.","missingArgType","Argument 'attrs' should be typed.","FunctionExpression","Argument 'state' should be typed.","Argument 'dispatch' should be typed.","no-console","Unexpected console statement.","MemberExpression","unexpected"]